
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
How are Python dictionaries different from Python lists?



Python lists maintain order and dictionaries do not maintain order


Python lists store multiple values and dictionaries store a single value


Python dictionaries are a collection and lists are not a collection


Python lists can store strings and dictionaries can only store words

->Python lists maintain order and dictionaries do not maintain order

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
What is a term commonly used to describe the Python dictionary feature in other programming languages?



Lambdas


Associative arrays


Closures


Sequences

->Associative arrays

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
What would the following Python code print out?


stuff = dict()
print(stuff['candy'])


candy


The program would fail with a traceback


0


-1

->The program would fail with a traceback

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
What would the following Python code print out?


stuff = dict()
print(stuff.get('candy',-1))


-1


'candy'


0


The program would fail with a traceback

->-1

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
(T/F) When you add items to a dictionary they remain in the order in which you added them.



False


True

->False

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
What is a common use of Python dictionaries in a program?



Building a histogram counting the occurrences of various strings in a file


Splitting a line of input into words using a space as a delimiter


Computing an average of a set of numbers


Sorting a list of names into alphabetical order

->Building a histogram counting the occurrences of various strings in a file

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
Which of the following lines of Python is equivalent to the following sequence of statements assuming that counts is a dictionary?


if key in counts:
    counts[key] = counts[key] + 1
else:
    counts[key] = 1


counts[key] = (counts[key] * 1) + 1


counts[key] = counts.get(key,-1) + 1


counts[key] = counts.get(key,0) + 1


counts[key] = key + 1


counts[key] =  (key in counts) + 1

->counts[key] = counts.get(key,0) + 1

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
In the following Python, what does the for loop iterate through?


x = dict()
...
for y in x :
     ...


It loops through the integers in the range from zero through the length of the dictionary


It loops through the values in the dictionary


It loops through the keys in the dictionary


It loops through all of the dictionaries in the program

->It loops through the keys in the dictionary

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
Which method in a dictionary object gives you a list of the values in the dictionary?



keys()


items()


all()


values()


each()

->values()

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
What is the purpose of the second parameter of the get() method for Python dictionaries?



To provide a default value if the key is not found


An alternate key to use if the first key cannot be found


The key to retrieve


The value to retrieve


->To provide a default value if the key is not found

- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
- # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # - # -
